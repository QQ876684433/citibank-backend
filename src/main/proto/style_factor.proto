// 风格因子
// python3 -m grpc_tools.protoc -I. --python_out=. --grpc_python_out=. style_factor.proto

syntax = "proto3";

option java_package = "com.example.ffbackend.rpc.proto";
option java_outer_classname = "StyleFactorProto";

service StyleFactor{
    // 语法：
    //get_size(ts_code: str, fields: str)
    //描述:
    //获取指定股票的市值因子
    //前置条件：
    //ts_code为股票代码加交易所代号，如000001.SZ表示平安银行；
    //fields限定为'circ_mv'和'total_mv',分别代表流通市值和总市值
    //后置条件：
    //返回对应股票的流通市值/总市值的自然对数
    rpc GetSize(GetSizeInput) returns (GetSizeOutput){}

    // 语法：
    //get_momentum(ts_code: str)
    //描述:
    //获取指定股票的动量因子
    //前置条件：
    //ts_code为股票代码加交易所代号，如000001.SZ表示平安银行；
    //后置条件：
    //返回对应股票的动量因子
    rpc GetMomentum(GetMomentumInput) returns (GetMomentumOutput){}

    // 语法：
    //get_book_to_market(stock_code: str)
    //描述:
    //获取指定股票的账面市值比因子
    //前置条件：
    //stock_code为股票代码，如300100表示双林股份；
    //后置条件：
    //返回对应股票的账面市值比因子
    rpc GetBookToMarket(GetBookToMarketInput) returns (GetBookToMarketOutput){}

    //语法：
    //get_liquidity(stock_code: str)
    //描述:
    //获取指定股票的流动性因子
    //前置条件：
    //stock_code为股票代码加交易所代号，如000001.SZ表示平安银行；
    //后置条件：
    //返回对应股票的流动性因子
    rpc GetLiquidity(GetLiquidityInput) returns (GetLiquidityOutput){}

//    get_beta(stock_code:str)
//    获取所有beta
//    以及数据库id和证券代码，以备不时之需

    rpc GetBeta(GetBetaInput) returns (GetBetaOutput){}

    //get_all_factors()
    //["","",""]
    rpc GetAllFactors(GetAllFactorsInput) returns (GetAllFactorsOutput){}
}

message GetSizeInput{
    string ts_code = 1;
    string fields = 2;
}

message GetSizeOutput{
    float value = 1;
}

message GetMomentumInput{
    string ts_code = 1;
    string fields=2;
}

message GetMomentumOutput{
    float value = 1;
}

message GetBookToMarketInput{
    string stock_code = 1;
}

message GetBookToMarketOutput{
    float value = 1;
}

message GetLiquidityInput{
    string stock_code = 1;
}

message GetLiquidityOutput{
    float value = 1;
}
message GetBetaInput{
    string stock_code = 1;
}
message GetBetaOutput{
    repeated float out_list = 1;
}
message GetAllFactorsInput{

}
message GetAllFactorsOutput{
    repeated string out_list=1;
}
